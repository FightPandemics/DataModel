{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "title": "users",
    "additionalProperties": true,
    "properties": {
        "createdAt": {
            "type": "string",
            "description": "Timestamp with the user's creation date",
            "format": "date-time"
        },
        "updatedAt": {
            "type": "string",
            "description": "Timestamp indicating last update on the database.",
            "format": "date-time"
        },
        "email": {
            "type": "string",
            "description": "User's email validated by a regex pattern.",
            "format": "email"
        },
        "accessToken": {
            "type": "string",
            "description": "User's acess token. Shouldn't be required?"
        },
        "firstName": {
            "type": "string",
            "description": "The first name of the user"
        },
        "lastName": {
            "type": "string",
            "description": "The last name of the user. Optional field."
        },
        "location": {
            "type": "object",
            "properties": {
                "coordinates": {
                    "type": "array",
                    "additionalItems": true,
                    "minItems": 2,
                    "maxItems": 2,
                    "uniqueItems": false,
                    "description": "Array with the coordinates, specifying **longitude first** and **latitude second**, as default in the [GeoJSON](https://docs.mongodb.com/manual/reference/geojson/) definition.",
                    "items": [
                        {
                            "type": "number",
                            "minimum": -180,
                            "maximum": 180,
                            "default": 0,
                            "description": "Location longitude\n",
                            "id": "lng"
                        },
                        {
                            "type": "number",
                            "minimum": -90,
                            "maximum": 90,
                            "default": 0,
                            "description": "Location latitude\n",
                            "id": "lat"
                        }
                    ]
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "Point"
                    ],
                    "description": "Type of the GeoJSON Object.\nPlease refer to the [official documentation](https://docs.mongodb.com/manual/reference/geojson/ ) for more information.\n\n**In our case, the value will always be of the type \"Point\".**"
                },
                "country": {
                    "type": "string",
                    "description": "String holding the country's name.\n"
                },
                "city": {
                    "type": "string",
                    "description": "String holding the city's name."
                },
                "neighborhood": {
                    "type": "string",
                    "description": "String holding the neighborhood's name."
                },
                "address": {
                    "type": "string",
                    "description": "String holding the address (street, number and other details)."
                }
            },
            "additionalProperties": false,
            "description": "Location document according to the norms of a [GeoJSON Object](https://docs.mongodb.com/manual/reference/geojson/ ).\nThe fields address, neighborhood, city, state and country are added to store the result of the geoprocessing.",
            "required": [
                "coordinates",
                "type"
            ]
        },
        "_id": {
            "type": "string",
            "description": "Automatically generated _it as primary key.",
            "pattern": "^[a-fA-F0-9]{24}$"
        },
        "needs": {
            "type": "object",
            "description": "User's need in the app, representing what kind of help he/she needs",
            "properties": {
                "medicalHelp": {
                    "type": "boolean",
                    "description": "Flag to indicate wheter the user needs medical help. \nMarking this indicates he shows symptoms of COVID-19.",
                    "default": false
                },
                "otherHelp": {
                    "type": "boolean",
                    "description": "Flag to indicate wheter the user needs non-medical help, such as getting groceries, medice and etc..",
                    "default": false
                }
            },
            "additionalProperties": false,
            "required": [
                "medicalHelp",
                "otherHelp"
            ]
        },
        "objectives": {
            "type": "object",
            "description": "Document with what are the objectives of the user through the application, such as donating, volunteering or sharing information.",
            "properties": {
                "volunteer": {
                    "type": "boolean",
                    "description": "Flag to indicate wheter the user wants to volunteer for iniciatives through the app.",
                    "default": false
                },
                "donate": {
                    "type": "boolean",
                    "description": "Flag to indicate wheter the user wants to donate for iniciatives through the app.",
                    "default": false
                },
                "shareInformation": {
                    "type": "boolean",
                    "description": "Flag to indicate wheter the user wants to share information through the app.",
                    "default": true
                }
            },
            "additionalProperties": false,
            "required": [
                "volunteer",
                "donate",
                "shareInformation"
            ]
        },
        "photo": {
            "type": "string",
            "description": "URI with the location of the profile's photo.",
            "format": "uri"
        },
        "urls": {
            "type": "object",
            "description": "Document holding the user urls to external websites and social networks",
            "properties": {
                "facebookURL": {
                    "type": "string",
                    "description": "URL to user's Facebook page.",
                    "format": "uri"
                },
                "linkedinURL": {
                    "type": "string",
                    "description": "URL to user's Linkedin page.",
                    "format": "uri"
                },
                "twitterURL": {
                    "type": "string",
                    "description": "URL to user's Twitter page.",
                    "format": "uri"
                },
                "githubURL": {
                    "type": "string",
                    "description": "URL to user's Github page.",
                    "format": "uri"
                },
                "websiteURL": {
                    "type": "string",
                    "description": "URL to user's personal website.",
                    "format": "uri"
                }
            },
            "additionalProperties": false
        },
        "about": {
            "type": "string",
            "description": "Small self-introduction, limited to 100 char"
        }
    },
    "required": [
        "createdAt",
        "updatedAt",
        "email",
        "firstName",
        "_id",
        "needs"
    ]
}